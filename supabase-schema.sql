-- Enable Row Level Security
ALTER DATABASE postgres SET "app.jwt_secret" TO 'your-jwt-secret';

-- Create managers table
CREATE TABLE public.managers (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name text NULL,
    phone text NULL,
    email text NULL,
    avatar text NULL,
    experience text NULL,
    CONSTRAINT managers_pkey PRIMARY KEY (id)
);

-- Create hostels table
CREATE TABLE public.hostels (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name text NULL,
    address text NULL,
    rooms integer NULL,
    occupancy integer NULL,
    manager_id bigint NULL,
    type text NULL,
    note text NULL,
    CONSTRAINT hostels_pkey PRIMARY KEY (id),
    CONSTRAINT hostels_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES managers(id)
);

-- Create tenants table
CREATE TABLE public.tenants (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name text NULL,
    phone text NULL,
    email text NULL,
    room_number text NULL,
    hostel_id bigint NULL,
    move_in_date date NULL,
    rent_amount numeric NULL,
    emergency_phone text NULL,
    months_rented integer NULL,
    status text DEFAULT 'active'::text,
    CONSTRAINT tenants_pkey PRIMARY KEY (id),
    CONSTRAINT tenants_hostel_id_fkey FOREIGN KEY (hostel_id) REFERENCES hostels(id)
);

-- Create employees table
CREATE TABLE public.employees (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name text NULL,
    position text NULL,
    phone text NULL,
    email text NULL,
    salary numeric NULL,
    hire_date date NULL,
    status text DEFAULT 'active'::text,
    CONSTRAINT employees_pkey PRIMARY KEY (id)
);

-- Create notifications table
CREATE TABLE public.notifications (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title text NULL,
    message text NULL,
    type text NULL,
    is_read boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

-- Create revenue_data table
CREATE TABLE public.revenue_data (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    month text NULL,
    amount numeric NULL,
    year integer NULL,
    CONSTRAINT revenue_data_pkey PRIMARY KEY (id)
);

-- Create expense_categories table
CREATE TABLE public.expense_categories (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name text NULL,
    amount numeric NULL,
    percentage numeric NULL,
    CONSTRAINT expense_categories_pkey PRIMARY KEY (id)
);

-- Create hostels_view for combined data
CREATE VIEW hostels_view AS
SELECT
    h.id,
    h.name,
    h.address,
    h.rooms,
    h.occupancy,
    h.type,
    h.note,
    json_build_object(
        'id', m.id,
        'name', m.name,
        'phone', m.phone,
        'email', m.email,
        'avatar', m.avatar,
        'experience', m.experience
    ) as manager
FROM
    hostels h
LEFT JOIN
    managers m ON h.manager_id = m.id;

-- Enable Row Level Security
ALTER TABLE public.managers ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.hostels ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.tenants ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.employees ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.notifications ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.revenue_data ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.expense_categories ENABLE ROW LEVEL SECURITY;

-- Create policies for public access (for development)
CREATE POLICY "Enable all operations for all users" ON public.managers FOR ALL USING (true);
CREATE POLICY "Enable all operations for all users" ON public.hostels FOR ALL USING (true);
CREATE POLICY "Enable all operations for all users" ON public.tenants FOR ALL USING (true);
CREATE POLICY "Enable all operations for all users" ON public.employees FOR ALL USING (true);
CREATE POLICY "Enable all operations for all users" ON public.notifications FOR ALL USING (true);
CREATE POLICY "Enable all operations for all users" ON public.revenue_data FOR ALL USING (true);
CREATE POLICY "Enable all operations for all users" ON public.expense_categories FOR ALL USING (true);

-- Insert sample data
INSERT INTO public.managers (name, phone, email, avatar, experience) VALUES
('Nguyễn Văn A', '0901234567', 'manager1@example.com', '', '5 năm quản lý khu trọ'),
('Trần Thị B', '0907654321', 'manager2@example.com', '', '3 năm kinh nghiệm');

INSERT INTO public.hostels (name, address, rooms, occupancy, manager_id, type, note) VALUES
('Khu trọ ABC', '123 Đường ABC, Quận 1, TP.HCM', 20, 15, 1, 'Cao cấp', 'Khu trọ gần trung tâm'),
('Khu trọ XYZ', '456 Đường XYZ, Quận 2, TP.HCM', 15, 10, 2, 'Bình dân', 'Khu trọ giá rẻ');

INSERT INTO public.tenants (name, phone, email, room_number, hostel_id, move_in_date, rent_amount, emergency_phone, months_rented, status) VALUES
('Lê Văn C', '0912345678', 'tenant1@example.com', 'A101', 1, '2024-01-01', 2500000, '0912345679', 12, 'active'),
('Phạm Thị D', '0923456789', 'tenant2@example.com', 'A102', 1, '2024-02-01', 2500000, '0923456790', 11, 'active'),
('Hoàng Văn E', '0934567890', 'tenant3@example.com', 'B201', 2, '2024-03-01', 2000000, '0934567891', 10, 'active');

INSERT INTO public.employees (name, position, phone, email, salary, hire_date, status) VALUES
('Nguyễn Thị F', 'Bảo vệ', '0945678901', 'security@example.com', 5000000, '2024-01-01', 'active'),
('Trần Văn G', 'Dọn dẹp', '0956789012', 'cleaning@example.com', 4000000, '2024-01-01', 'active');

INSERT INTO public.notifications (title, message, type, is_read) VALUES
('Thông báo mới', 'Có khách thuê mới', 'info', false),
('Cảnh báo', 'Phòng A101 cần sửa chữa', 'warning', false),
('Thành công', 'Thanh toán tiền thuê thành công', 'success', true);

INSERT INTO public.revenue_data (month, amount, year) VALUES
('Tháng 1', 50000000, 2024),
('Tháng 2', 55000000, 2024),
('Tháng 3', 60000000, 2024),
('Tháng 4', 58000000, 2024),
('Tháng 5', 62000000, 2024),
('Tháng 6', 65000000, 2024);

INSERT INTO public.expense_categories (name, amount, percentage) VALUES
('Điện nước', 15000000, 25),
('Bảo trì', 8000000, 13),
('Lương nhân viên', 12000000, 20),
('Thuế', 6000000, 10),
('Khác', 19000000, 32);
