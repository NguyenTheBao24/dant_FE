import { TenantFormData, Room, ValidationResult, ContractInfo } from '../types/tenant.types'

/**
 * Validate tenant form data
 */
export function validateTenantForm(formData: TenantFormData, selectedRoom: Room | null): ValidationResult {
    if (!formData.name.trim()) {
        return {
            isValid: false,
            errorMessage: 'Vui lòng nhập tên khách thuê'
        }
    }

    if (!formData.phone.trim()) {
        return {
            isValid: false,
            errorMessage: 'Vui lòng nhập số điện thoại'
        }
    }

    if (!selectedRoom) {
        return {
            isValid: false,
            errorMessage: 'Vui lòng chọn phòng từ danh sách gợi ý'
        }
    }

    if (selectedRoom.status !== 'available') {
        return {
            isValid: false,
            errorMessage: `Phòng ${selectedRoom.room_number} đã có người thuê. Vui lòng chọn phòng khác.`
        }
    }

    if (formData.email && formData.email.trim() && !formData.email.includes('@')) {
        return {
            isValid: false,
            errorMessage: 'Email không hợp lệ'
        }
    }

    if (formData.rentMonths <= 0) {
        return {
            isValid: false,
            errorMessage: 'Số tháng thuê phải lớn hơn 0'
        }
    }

    return { isValid: true }
}

/**
 * Filter rooms based on search term
 */
export function filterRooms(rooms: Room[], searchTerm: string): Room[] {
    if (!searchTerm.trim()) return rooms

    return rooms.filter(room =>
        room.room_number.toLowerCase().includes(searchTerm.toLowerCase()) ||
        room.room_type.toLowerCase().includes(searchTerm.toLowerCase())
    )
}

/**
 * Generate contract information
 */
export function generateContractInfo(rentMonths: number): ContractInfo {
    const today = new Date()
    const startDate = today.toISOString().split('T')[0]
    const endDate = new Date(
        today.getFullYear(),
        today.getMonth() + rentMonths,
        today.getDate()
    ).toISOString().split('T')[0]

    return {
        startDate,
        endDate,
        rentMonths,
        isAutoGenerated: true
    }
}

/**
 * Format currency for Vietnamese locale
 */
export function formatCurrency(amount: number): string {
    return amount.toLocaleString('vi-VN') + 'đ'
}

/**
 * Format date for Vietnamese locale
 */
export function formatDate(dateString: string): string {
    const date = new Date(dateString)
    return date.toLocaleDateString('vi-VN')
}

/**
 * Handle error messages based on error codes
 */
export function getErrorMessage(error: any): string {
    const errorObj = error as any

    if (errorObj?.code === '23505') {
        if (errorObj?.details?.includes('cccd')) {
            return 'CCCD đã tồn tại trong hệ thống. Vui lòng kiểm tra lại.'
        } else if (errorObj?.details?.includes('email')) {
            return 'Email đã tồn tại trong hệ thống. Vui lòng kiểm tra lại.'
        } else {
            return 'Thông tin khách thuê đã tồn tại. Vui lòng kiểm tra lại.'
        }
    } else if (errorObj?.code === '409') {
        return 'Có lỗi xung đột dữ liệu. Vui lòng thử lại.'
    } else {
        return 'Có lỗi xảy ra khi tạo hợp đồng thuê. Vui lòng thử lại.'
    }
}

/**
 * Create initial form data
 */
export function createInitialFormData(): TenantFormData {
    return {
        name: '',
        address: '',
        phone: '',
        email: '',
        cccd: '',
        rentMonths: 12
    }
}
